#!/usr/bin/env python3
import asciichartpy as acp
from datetime import datetime
from fetch_ratings import load_history
import os

# Configura√ß√µes
USERNAME = "Matheus_Carne"  # üëà Substitua pelo seu username
RATING_TYPE = "rapid"       # "blitz", "bullet", etc.
MAX_POINTS = 20             # N√∫mero m√°ximo de ratings no gr√°fico
COLOR = acp.green           # Cores dispon√≠veis: green, blue, red, yellow, etc.

def generate_chart():
    # Carrega o hist√≥rico
    history = load_history().get("history", [])
    
    if not history:
        return "‚ö†Ô∏è Nenhum dado de rating encontrado. Execute o workflow primeiro."
    
    # Prepara os dados para o gr√°fico (√∫ltimos MAX_POINTS ratings)
    ratings = [entry["rating"] for entry in history][-MAX_POINTS:]
    timestamps = [entry["timestamp"] for entry in history][-MAX_POINTS:]
    
    # Configura√ß√µes do gr√°fico ASCII
    config = {
        "height": 15,                          # Altura do gr√°fico
        "colors": [COLOR],                     # Cor da linha
        "format": "{:8.2f} ‚î§",                 # Formato dos valores Y
        "offset": 3                            # Espa√ßamento lateral
    }
    
    # Gera o gr√°fico
    chart = acp.plot(ratings, config)
    
    # Adiciona r√≥tulos personalizados
    min_rating = min(ratings)
    max_rating = max(ratings)
    last_update = timestamps[-1] if timestamps else datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    return f"""
# ‚ôü Chess.com {RATING_TYPE.capitalize()} Rating - @{USERNAME}

√öltima atualiza√ß√£o: {datetime.fromtimestamp(last_update).strftime('%Y-%m-%d %H:%M:%S')}
Rating m√≠nimo: {min_rating}
Rating m√°ximo: {max_rating}

{chart}
"""
